
RemoveDrive V3.1.3 - prepares removable drives for safe removal
Freeware by Uwe Sieber - www.uwe-sieber.de

Win32 version works on Windows XP and higher including x64 version of Windows.
x64 version works on x64 versions Windows only.

Homepage: http://www.uwe-sieber.de/drivetools_e.html


Usage:
RemoveDrive DriveSpec [-47][-v][-d][-l][-h][-a][-b][-i][-s][-na][-w:nnnn]

DriveSpec  is the drive to remove, e.g. U: or an NTFS mountpoint as "C:\CardReader\Multi Reader SD"
           or . for the current drive
           or \ for the drive of the RemoveDrive.exe
           or a volume name like \\?\Volume{433619ed-c6ea-11d9-a3b2-806d6172696f}
           or a kernel name like \Device\HarddiskVolume2 (Volume)
           or a kernel name like \Device\Harddisk2\DR0 (Disk)
           or a partition name like \Device\Harddisk2\Partition1
           or a device ID
           or a friendly name like 'Corsair Voyager'
           Wildcards can be used.
-47      perform safe removal resulting in problem code 47
-v       remove the volume only instead of the drive or whole device
-d       remove the drive only instead of the whole device
-L       loop until success
-t       'eject' TrueCrypt volumes hosted by the drive to remove
-e       try to dismount and eject if the removal fails
-h       show open handles
-h:X     show open handles on a different drive (e.g. a TrueCrypt volume whose container is on the drive to remove)
-a       activates Windows of applications owning the open handles
-w:nnnn  wait nnnn milliseconds before close
-s       self delete removedrive.exe
-b       let Windows show the "Safe To Remove Hardware" balloon tip or a messagebox (depends on Win version)
-i       stop Windows indexing service (XP: CiSvc, Vista+: WSearch) for a moment if required (admins)
-na      no about info
-dbg     show debug information

Parameters are case-insensitive.

Only one drive or device is prepared for safe removal.


Sample:

removedrive U: -L -H -A -W:1000



Returns Errorlevels:

0 - successfully removed a device
1 - device identified but not removed
2 - device not found
3 - parameters are invalid
4 - RemoveDrive.exe located on the drive to remove -> temporary copy
    created and executed

If the removal fails then someone still accesses the drive. This can be
something banal like an open Word document, a mounted TrueCrypt container
or some kind of monitoring tool like a virus scanner.

If removedrive -h does not show a handle then maybe the SysInternals
ProcessExplorer can. Using a kernel driver it finds handles of restritive
system processes too which RemoveDrive cannot:
http://www.microsoft.com/technet/sysinternals/utilities/ProcessExplorer.html

After starting it go to 'Find' -> 'Find Handle or DLL', enter the drive letter
and search. Old versions did not resolve drive letter, here the handles kernel
name had to be searched for, as volume12 or disk5. RemoveDrives gives a hint
what to search for.

When started with parameter -L and the removal failed then the E key can
be pressed to perform a media eject after locking and dismounting the volume.
It depends on the device if ejecting the media is supported or not. But the
important part is lock and dismount. If locking succeeds the there where no
open handles on the volume. If locking fails then dismounting can be forced
by pressing the F key. Then at least the file system is dismounted and in a
consitent state, the device can be removed 'safely enough'.

The 'safe removal' of a device itself cannot be forced.

When a TrueCrypt volume is found which is hosted by the drive to remove and
the -T parameter is set then RemoveDrive tries to 'eject' the TrueCrypt
volume in a loop. By pressing the F key this can be forced. Open file handles
on the TrueCrypt volume become invalid and the TrueCrypt container is released.

Since V2.7 this works with VeraCrypt too, since V2.8.4 with VeraCrypt V1.18.
If it does not work with a newer version of VeraCrypt, please let me know.


If started with admin privileges or the USBDLM command interface available,
then a removed USB drive ends up with problem code 21 and can be reactivated
by means of RestartSrDev:
http://www.uwe-sieber.de/drivetools_e.html#restart
Or in UsbDriveInfo by right-clicking the device -> Restart:
http://www.uwe-sieber.de/usbdriveinfo_e.html

On some USB3 controllers the USB device completely disappears after safe
removal instead staying present with a problem code.
Here you can use the parameter -d to remove the drive only which then gets
problem code 21 and can be reactivated.

If as drive identifier a device ID, volume name, friendly name etc is given
then either
- a full match
- a wildcard match (* 0..n chars, ? exactly one char)
- a length >= 8 and appearance of the given string
is required to get a match.

For volume labels either
- a full match
- a wildcard match
is required.



About open handles

RemoveDrive does no use a driver for gaterhing handle information. Therefore
when hitting the handle of a waiting pipe under XP the function for getting
the handle name does not return, the thread freezes. Since V3.0 RemoveDrive
uses the Win32 call GetFileType to filter out pipes before calling NtQueryObject.
GetFileType freezes too when hitting a pipe but when the RemoveDrive process
ends Windows sucessfully kills it in contrast to a hanging NtQueryObject call.
Since Vista GetFileType doesn't freeze at all, so no more problem since V3.0.

RemoveDrive finds handles of processes of the same or lower trust level. So if
it is called restricted then it finds handles of restricted processes only.
Since V3.1 it gets handles of system processes too if started with admin previleges.




Licence


RemoveDrive is Freeware.

Allowed:
- usage in any environment, including commercial
- include in software products, including commercial
- include on CD/DVD of computer magazines
- making available for download by means of package managers

Not allowed:
- changing any of the files
- offer for download by means of a 'Downloader' software




Uwe Sieber
March 2019
